name: Deploy to AWS EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.16.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run lint
      run: npm run lint -- --fix --max-warnings 50
      
    - name: Build application
      run: npm run build
      
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r dist/* deploy/
        cp package.json deploy/
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0 
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Stop existing application
          sudo systemctl stop trello-app || echo "Service not running"
          
          # Backup current deployment
          sudo rm -rf /var/www/trello-backup
          sudo mv /var/www/trello /var/www/trello-backup 2>/dev/null || echo "No previous deployment"
          
          # Create new deployment directory
          sudo mkdir -p /var/www/trello
          sudo chown $USER:$USER /var/www/trello
          
    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "deploy/*"
        target: "/var/www/trello/"
        strip_components: 1
        
    - name: Start application on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        command_timeout: 5m
        script: |
          cd /var/www/trello
          
          # Install serve if not exists
          sudo npm install -g serve pm2 || echo "Already installed"
          
          # Stop existing PM2 processes quickly
          pm2 delete all || echo "No processes to delete"
          
          # Start app directly with PM2
          pm2 start serve --name trello-app -- -s . -l 3000
          
          # Save PM2 config
          pm2 save
          
          # Check if running
          pm2 list
          
          # Quick test
          sleep 3
          curl -f http://localhost:3000 > /dev/null && echo "✅ App is running!" || echo "❌ App failed to start"
          
    - name: Health Check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        command_timeout: 30s
        script: |
          # Final health check
          echo "🔍 Checking application status..."
          pm2 list
          
          # Test external access
          curl -f http://localhost:3000 > /dev/null && echo "✅ Application is healthy!" || echo "❌ Health check failed" 