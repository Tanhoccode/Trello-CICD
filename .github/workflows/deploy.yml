name: Deploy to AWS EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.16.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run lint
      run: npm run lint -- --fix --max-warnings 50
      
    - name: Build application
      run: npm run build
      
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r dist/* deploy/
        cp package.json deploy/
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0 
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Stop existing application
          sudo systemctl stop trello-app || echo "Service not running"
          
          # Backup current deployment
          sudo rm -rf /var/www/trello-backup
          sudo mv /var/www/trello /var/www/trello-backup 2>/dev/null || echo "No previous deployment"
          
          # Create new deployment directory
          sudo mkdir -p /var/www/trello
          sudo chown $USER:$USER /var/www/trello
          
    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "deploy/*"
        target: "/var/www/trello/"
        strip_components: 1
        
    - name: Start application on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd /var/www/trello
          
          # Install serve if not exists
          sudo npm install -g serve pm2
          
          # Stop existing PM2 processes
          pm2 delete trello-app || echo "No existing PM2 process"
          pm2 kill || echo "PM2 not running"
          
          # Create simple PM2 config
          cat > ecosystem.config.js << 'EOF'
          module.exports = {
            apps: [{
              name: 'trello-app',
              script: 'serve',
              args: '-s . -l 3000',
              cwd: '/var/www/trello',
              instances: 1,
              autorestart: true,
              watch: false,
              max_memory_restart: '1G',
              env: {
                NODE_ENV: 'production',
                PORT: 3000
              }
            }]
          }
          EOF
          
          # Start with PM2 directly (not systemd)
          pm2 start ecosystem.config.js
          pm2 save
          pm2 startup
          
          # Check PM2 status
          pm2 list
          pm2 logs --lines 10
          
          # Test if app is running
          sleep 5
          curl -f http://localhost:3000 || echo "App not responding" 